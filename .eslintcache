[{"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\index.js":"1","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\reportWebVitals.js":"2","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\App.js":"3","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\HomePage.js":"4","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailPage.js":"5","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\NavBar.js":"6","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\email-content.js":"7","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailListPage.js":"8","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\EmailList.js":"9","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\PageNotFound.js":"10","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\SentEmailList.js":"11","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\ComposeEmailForm.js":"12","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\SentEmailPage.js":"13"},{"size":522,"mtime":1607513668156,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1796,"mtime":1607689231348,"results":"17","hashOfConfig":"15"},{"size":198,"mtime":1607537034304,"results":"18","hashOfConfig":"15"},{"size":4782,"mtime":1607685173828,"results":"19","hashOfConfig":"15"},{"size":2848,"mtime":1607688876569,"results":"20","hashOfConfig":"15"},{"size":2638,"mtime":1607519316311,"results":"21","hashOfConfig":"15"},{"size":1042,"mtime":1607629379343,"results":"22","hashOfConfig":"15"},{"size":1790,"mtime":1607633278173,"results":"23","hashOfConfig":"15"},{"size":125,"mtime":1607441576030,"results":"24","hashOfConfig":"15"},{"size":2659,"mtime":1607635225336,"results":"25","hashOfConfig":"15"},{"size":1878,"mtime":1607687085726,"results":"26","hashOfConfig":"15"},{"size":4805,"mtime":1607685077379,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"fyepg0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\index.js",[],["58","59"],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\reportWebVitals.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\App.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\HomePage.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailPage.js",["60","61"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '75%',\r\n    }\r\n});\r\n\r\nconst EmailPage = ({ match }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    var emailAccount = match.params.accountEmailAddress\r\n    let senderEmailId = match.params.senderEmailId\r\n    senderEmailId = parseInt(senderEmailId)\r\n\r\n    const [emailContent, setEmailContent] = useState([]);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetch(`/api/email/${senderEmailId}/${emailAccount}`)\r\n                const body = await result.json()\r\n                setEmailContent([body])\r\n            } catch (err) {\r\n                console.log(`error: ${err}`)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [emailAccount]);\r\n\r\n    const deleteEmailFromDb = async (receiverEmailAddress, emailId) => {\r\n        try {\r\n            const result = await fetch('/api/deleteEmail', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    receiverEmailAddress: receiverEmailAddress,\r\n                    id: emailId,\r\n                })\r\n            })\r\n            setOpen(false)\r\n            history.goBack()\r\n        } catch (err) {\r\n            console.log(`error: ${err}`)\r\n        }\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"page-body\">\r\n            <h1>Email content</h1>\r\n            <hr />\r\n            <div className=\"page-body\">{emailContent.map((content, key) => (\r\n                <Card className={classes.root}>\r\n                    <CardContent key={key}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                            Subject: {content.subject}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {content.date} at {content.time}\r\n                        </Typography>\r\n                        <h2>from : {content.senderEmailAddress}</h2>\r\n                        <div>Message:</div>\r\n                        <p> {content.messageContent}</p>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Delete\r\n                        </Button>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">{\"You are about to DELETE that email\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-description\">\r\n                                    Pressing on the 'AGREE' button will delete this email permanently.\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Disagree\r\n                                </Button>\r\n                                <Button onClick={() => deleteEmailFromDb(emailAccount, content.id)} color=\"primary\" autoFocus>\r\n                                    Agree\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </CardActions>\r\n                </Card>\r\n            ))}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EmailPage","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\NavBar.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\email-content.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailListPage.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\EmailList.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\PageNotFound.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\SentEmailList.js",["62"],"import React, { useState, useEffect } from 'react'\r\nimport SentEmailPage from '../screens/SentEmailPage'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '30%',\r\n    }\r\n});\r\n\r\nconst SentEmailList = (props) => {\r\n    var emailAccount = props.accountEmailAddress\r\n    const [sentEmails, setSentEmails] = useState([]);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetch(`/api/sent-email-list?receiverEmailAddress=${emailAccount}`)\r\n                const body = await result.json()\r\n                setSentEmails(body)\r\n            } catch (err) {\r\n                console.log(`error: ${err}`)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [emailAccount]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"page-body\">\r\n            <h1>Sent Items</h1>\r\n            <hr />\r\n            {sentEmails.slice(0).reverse().map((sentEmail, key) => (\r\n                <Card className={classes.root}>\r\n                    <CardActionArea >\r\n                        <CardContent>\r\n                            <Link className=\"email-list-item\" key={key} to={`/single-email-sent/${sentEmail.id}/${emailAccount}`}>\r\n                                <div key={key}>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"email-list-item\">\r\n                                        Subject: {sentEmail.subject}\r\n                                    </Typography>\r\n                                    <h3>to : {sentEmail.receiverEmailAddress}</h3>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {sentEmail.date} at {sentEmail.time}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        Message brief: {sentEmail.messageContent.substring(0, 30)}...\r\n                                </Typography>\r\n                                </div>\r\n                            </Link>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SentEmailList","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\ComposeEmailForm.js",["63"],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\SentEmailPage.js",["64","65"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '75%',\r\n    }\r\n});\r\n\r\nconst SentEmailPage = ({ match }) => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    var emailAccount = match.params.accountEmailAddress\r\n    let senderEmailId = match.params.senderEmailId\r\n    senderEmailId = parseInt(senderEmailId)\r\n    const [emailContent, setEmailContent] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetch(`/api/spec-email-sent/${senderEmailId}/${emailAccount}`)\r\n                const body = await result.json()\r\n                setEmailContent([body])\r\n            } catch (err) {\r\n                console.log(`error: ${err}`)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [emailAccount])\r\n\r\n    const deleteEmailFromDb = async (receiverEmailAddress, emailId) => {\r\n        try {\r\n            const result = await fetch('/api/deleteSentEmail', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    receiverEmailAddress: receiverEmailAddress,\r\n                    id: emailId,\r\n                })\r\n            })\r\n            setOpen(false)\r\n            history.goBack()\r\n        } catch (err) {\r\n            console.log(`error: ${err}`)\r\n        }\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"page-body\">\r\n            <h1>Sent Email content</h1>\r\n            <hr />\r\n            <div className=\"page-body\">{emailContent.map((content, key) => (\r\n                <Card className={classes.root}>\r\n                    <CardContent key={key}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                            Subject: {content.subject}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {content.date} at {content.time}\r\n                        </Typography>\r\n                        <h2>from: {content.receiverEmailAddress}</h2>\r\n                        <div>Message:</div>\r\n                        <p> {content.messageContent}</p>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Delete\r\n                        </Button>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">{\"You are about to DELETE that email\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-description\">\r\n                                    Pressing on the 'AGREE' button will delete this email permanently.\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Disagree\r\n                                </Button>\r\n                                <Button onClick={() => deleteEmailFromDb(emailAccount, content.id)} color=\"primary\" autoFocus>\r\n                                    Agree\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </CardActions>\r\n                </Card>\r\n            ))}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SentEmailPage",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":42,"column":8,"nodeType":"72","endLine":42,"endColumn":22,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":46,"column":19,"nodeType":"76","messageId":"77","endLine":46,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":23,"column":15,"nodeType":"76","messageId":"77","endLine":23,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":41,"column":8,"nodeType":"72","endLine":41,"endColumn":22,"suggestions":"80"},{"ruleId":"74","severity":1,"message":"75","line":45,"column":19,"nodeType":"76","messageId":"77","endLine":45,"endColumn":25},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'senderEmailId'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'SentEmailPage' is defined but never used.","'body' is assigned a value but never used.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},"Update the dependencies array to be: [emailAccount, senderEmailId]",{"range":"88","text":"89"},{"range":"90","text":"89"},[1555,1569],"[emailAccount, senderEmailId]",[1565,1579]]