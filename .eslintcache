[{"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\index.js":"1","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\reportWebVitals.js":"2","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\App.js":"3","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\HomePage.js":"4","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailPage.js":"5","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\NavBar.js":"6","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\email-content.js":"7","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailListPage.js":"8","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\EmailList.js":"9","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\PageNotFound.js":"10","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\SentEmailList.js":"11","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\ComposeEmailForm.js":"12","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\SentEmailPage.js":"13","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmptyContentPage.js":"14","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\LoadingIndicator.js":"15","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\Explain.js":"16"},{"size":310,"mtime":1607789053273,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":2069,"mtime":1607783298276,"results":"20","hashOfConfig":"18"},{"size":1832,"mtime":1607788574727,"results":"21","hashOfConfig":"18"},{"size":4801,"mtime":1607703519202,"results":"22","hashOfConfig":"18"},{"size":3954,"mtime":1607797285796,"results":"23","hashOfConfig":"18"},{"size":2638,"mtime":1607519316311,"results":"24","hashOfConfig":"18"},{"size":1247,"mtime":1607700011626,"results":"25","hashOfConfig":"18"},{"size":2232,"mtime":1607703272572,"results":"26","hashOfConfig":"18"},{"size":125,"mtime":1607441576030,"results":"27","hashOfConfig":"18"},{"size":3666,"mtime":1607703569969,"results":"28","hashOfConfig":"18"},{"size":3115,"mtime":1607702998178,"results":"29","hashOfConfig":"18"},{"size":4817,"mtime":1607703463817,"results":"30","hashOfConfig":"18"},{"size":265,"mtime":1607696095309,"results":"31","hashOfConfig":"18"},{"size":595,"mtime":1607700042745,"results":"32","hashOfConfig":"18"},{"size":1326,"mtime":1607797198064,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"fyepg0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\index.js",[],["71","72"],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\reportWebVitals.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\App.js",["73"],"import React, { useState, useEffect } from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport HomePage from './screens/HomePage'\nimport EmailListPage from './screens/EmailListPage'\nimport EmailPage from './screens/EmailPage'\nimport SentEmailPage from './screens/SentEmailPage'\nimport NavBar from './NavBar'\nimport PageNotFound from './screens/PageNotFound'\nimport SentEmailList from './components/SentEmailList'\nimport ComposeEmailForm from './components/ComposeEmailForm'\nimport './App.css'\n\n\nfunction App() {\n  const [accountEmailAddress, setAccountEmailAddress] = useState('')\n\n  React.useEffect(() => {\n    setAccountEmailAddress(localStorage.getItem(\"accountEmailAddress\"))\n  }, [accountEmailAddress])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div style={{ width: '100%', height: '100%', display: 'flex' }}>\n          <div style={{ width: '15%', height: '100%', display: 'flex' }}>\n            <NavBar accountEmailAddress={accountEmailAddress} />\n          </div>\n          <div style={{ width: '75%', height: '100%', display: 'flex', flexDirection: 'column' }}>\n            <Switch>\n              <Route path=\"/\" render={(props) => <HomePage {...props} login={username => setAccountEmailAddress(username)} />} exact />\n              <Route path=\"/email-list\" render={(props) => <EmailListPage {...props} accountEmailAddress={accountEmailAddress} />} />\n              <Route path=\"/email/:senderEmailId/:accountEmailAddress\" component={EmailPage} />\n              <Route path=\"/sent-email-list\" render={(props) => <SentEmailList {...props} accountEmailAddress={accountEmailAddress} />} />\n              <Route path=\"/single-email-sent/:senderEmailId/:accountEmailAddress\" component={SentEmailPage} />\n              <Route path=\"/composeNewEmail\" render={(props) => <ComposeEmailForm {...props} accountEmailAddress={accountEmailAddress} />} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\HomePage.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailPage.js",["74"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '75%',\r\n    }\r\n})\r\n\r\nconst EmailPage = ({ match }) => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    var emailAccount = match.params.accountEmailAddress\r\n    let senderEmailId = match.params.senderEmailId\r\n    senderEmailId = parseInt(senderEmailId)\r\n\r\n    const [emailContent, setEmailContent] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetch(`/api/email/${senderEmailId}/${emailAccount}`)\r\n                const body = await result.json()\r\n                setEmailContent([body])\r\n            } catch (err) {\r\n                console.log(`error: ${err}`)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [emailAccount, senderEmailId])\r\n\r\n    const deleteEmailFromDb = async (receiverEmailAddress, emailId) => {\r\n        try {\r\n            const result = await fetch('/api/deleteEmail', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    receiverEmailAddress: receiverEmailAddress,\r\n                    id: emailId,\r\n                })\r\n            })\r\n            setOpen(false)\r\n            history.goBack()\r\n        } catch (err) {\r\n            console.log(`error: ${err}`)\r\n        }\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"page-body\">\r\n            <h1>Email content</h1>\r\n            <hr />\r\n            <div className=\"page-body\">{emailContent.map((content, key) => (\r\n                <Card className={classes.root} key={key}>\r\n                    <CardContent key={key}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                            Subject: {content.subject}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {content.date} at {content.time}\r\n                        </Typography>\r\n                        <h2>from : {content.senderEmailAddress}</h2>\r\n                        <div>Message:</div>\r\n                        <p> {content.messageContent}</p>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Delete\r\n                        </Button>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">{\"You are about to DELETE that email\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-description\">\r\n                                    Pressing on the 'AGREE' button will delete this email permanently.\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Disagree\r\n                                </Button>\r\n                                <Button onClick={() => deleteEmailFromDb(emailAccount, content.id)} color=\"primary\" autoFocus>\r\n                                    Agree\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </CardActions>\r\n                </Card>\r\n            ))}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EmailPage","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\NavBar.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\email-content.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailListPage.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\EmailList.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\PageNotFound.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\SentEmailList.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\ComposeEmailForm.js",["75"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\n\r\nconst ComposeEmailForm = (props) => {\r\n    const [receiverEmailAddress, setReceiverEmailAddress] = useState('')\r\n    const [emailSubject, setEmailSubject] = useState('')\r\n    const [emailContent, setEmailContent] = useState('')\r\n    const senderEmailAddress = props.accountEmailAddress\r\n\r\n    const sendEmail = async () => {\r\n        var today = new Date(), date, time\r\n\r\n        date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\r\n        time = today.getHours() + ':' + (today.getMinutes())\r\n\r\n        const result = await fetch(`/api/composeNewEmail`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ senderEmailAddress, receiverEmailAddress, subject: emailSubject, messageContent: emailContent, date, time }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        const body = await result.json()\r\n    }\r\n\r\n    return (\r\n        <div id=\"send-email-form\">\r\n            <h1>Compose New Email</h1>\r\n            <hr />\r\n            <form onSubmit={sendEmail}>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"To:\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"example@email.com\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={receiverEmailAddress} onChange={(event) => setReceiverEmailAddress(event.target.value)}\r\n                    required={true}\r\n                    type=\"email\"\r\n                />\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Subject:\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Email Title\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={emailSubject} onChange={(event) => setEmailSubject(event.target.value)}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-full-width\"\r\n                    label=\"Email Content:\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Write a message\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    value={emailContent} onChange={(event) => setEmailContent(event.target.value)}\r\n                    multiline={true}\r\n                    rows=\"17\"\r\n                />\r\n                <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\r\n                    Send Email\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComposeEmailForm","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\SentEmailPage.js",["76"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '75%',\r\n    }\r\n})\r\n\r\nconst SentEmailPage = ({ match }) => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    var emailAccount = match.params.accountEmailAddress\r\n    let senderEmailId = match.params.senderEmailId\r\n    senderEmailId = parseInt(senderEmailId)\r\n    const [emailContent, setEmailContent] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetch(`/api/spec-email-sent/${senderEmailId}/${emailAccount}`)\r\n                const body = await result.json()\r\n                setEmailContent([body])\r\n            } catch (err) {\r\n                console.log(`error: ${err}`)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [emailAccount, senderEmailId])\r\n\r\n    const deleteEmailFromDb = async (receiverEmailAddress, emailId) => {\r\n        try {\r\n            const result = await fetch('/api/deleteSentEmail', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    receiverEmailAddress: receiverEmailAddress,\r\n                    id: emailId,\r\n                })\r\n            })\r\n            setOpen(false)\r\n            history.goBack()\r\n        } catch (err) {\r\n            console.log(`error: ${err}`)\r\n        }\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"page-body\">\r\n            <h1>Sent Email content</h1>\r\n            <hr />\r\n            <div className=\"page-body\">{emailContent.map((content, key) => (\r\n                <Card className={classes.root} key={key}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                            Subject: {content.subject}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {content.date} at {content.time}\r\n                        </Typography>\r\n                        <h2>from: {content.receiverEmailAddress}</h2>\r\n                        <div>Message:</div>\r\n                        <p> {content.messageContent}</p>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                            Delete\r\n                        </Button>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">{\"You are about to DELETE that email\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-description\">\r\n                                    Pressing on the 'AGREE' button will delete this email permanently.\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleClose} color=\"primary\">\r\n                                    Disagree\r\n                                </Button>\r\n                                <Button onClick={() => deleteEmailFromDb(emailAccount, content.id)} color=\"primary\" autoFocus>\r\n                                    Agree\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </CardActions>\r\n                </Card>\r\n            ))}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SentEmailPage","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmptyContentPage.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\LoadingIndicator.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\Explain.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"85","line":46,"column":19,"nodeType":"83","messageId":"84","endLine":46,"endColumn":25},{"ruleId":"81","severity":1,"message":"86","line":25,"column":15,"nodeType":"83","messageId":"84","endLine":25,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":45,"column":19,"nodeType":"83","messageId":"84","endLine":45,"endColumn":25},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]