[{"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\index.js":"1","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\reportWebVitals.js":"2","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\App.js":"3","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\HomePage.js":"4","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailPage.js":"5","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\NavBar.js":"6","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\email-content.js":"7","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailListPage.js":"8","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\EmailList.js":"9","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\PageNotFound.js":"10","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\SentEmailList.js":"11","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\ComposeEmailForm.js":"12","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\SentEmailPage.js":"13"},{"size":522,"mtime":1607513668156,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1797,"mtime":1607684882430,"results":"17","hashOfConfig":"15"},{"size":198,"mtime":1607537034304,"results":"18","hashOfConfig":"15"},{"size":4782,"mtime":1607685173828,"results":"19","hashOfConfig":"15"},{"size":1105,"mtime":1607629075420,"results":"20","hashOfConfig":"15"},{"size":2638,"mtime":1607519316311,"results":"21","hashOfConfig":"15"},{"size":1042,"mtime":1607629379343,"results":"22","hashOfConfig":"15"},{"size":1790,"mtime":1607633278173,"results":"23","hashOfConfig":"15"},{"size":125,"mtime":1607441576030,"results":"24","hashOfConfig":"15"},{"size":2659,"mtime":1607635225336,"results":"25","hashOfConfig":"15"},{"size":1766,"mtime":1607632530939,"results":"26","hashOfConfig":"15"},{"size":4805,"mtime":1607685077379,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"fyepg0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\index.js",[],["57","58"],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\reportWebVitals.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\App.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\HomePage.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailPage.js",["59","60"],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\NavBar.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\email-content.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\EmailListPage.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\EmailList.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\PageNotFound.js",[],"C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\SentEmailList.js",["61"],"import React, { useState, useEffect } from 'react'\r\nimport SentEmailPage from '../screens/SentEmailPage'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: '30%',\r\n    }\r\n});\r\n\r\nconst SentEmailList = (props) => {\r\n    var emailAccount = props.accountEmailAddress\r\n    const [sentEmails, setSentEmails] = useState([]);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const result = await fetch(`/api/sent-email-list?receiverEmailAddress=${emailAccount}`)\r\n                const body = await result.json()\r\n                setSentEmails(body)\r\n            } catch (err) {\r\n                console.log(`error: ${err}`)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [emailAccount]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"page-body\">\r\n            <h1>Sent Items</h1>\r\n            <hr />\r\n            {sentEmails.slice(0).reverse().map((sentEmail, key) => (\r\n                <Card className={classes.root}>\r\n                    <CardActionArea >\r\n                        <CardContent>\r\n                            <Link className=\"email-list-item\" key={key} to={`/single-email-sent/${sentEmail.id}/${emailAccount}`}>\r\n                                <div key={key}>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"email-list-item\">\r\n                                        Subject: {sentEmail.subject}\r\n                                    </Typography>\r\n                                    <h3>to : {sentEmail.receiverEmailAddress}</h3>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {sentEmail.date} at {sentEmail.time}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        Message brief: {sentEmail.messageContent.substring(0, 30)}...\r\n                                </Typography>\r\n                                </div>\r\n                            </Link>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SentEmailList","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\components\\ComposeEmailForm.js",["62"],"import React, { useState } from 'react'\r\n\r\nconst ComposeEmailForm = (props) => {\r\n    const [receiverEmailAddress, setReceiverEmailAddress] = useState('')\r\n    const [emailSubject, setEmailSubject] = useState('')\r\n    const [emailContent, setEmailContent] = useState('')\r\n    const senderEmailAddress = props.accountEmailAddress\r\n\r\n    const addComment = async () => {\r\n        var today = new Date(), date, time\r\n\r\n        date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        time = today.getHours() + ':' + (today.getMinutes());\r\n\r\n        const result = await fetch(`/api/composeNewEmail`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ senderEmailAddress, receiverEmailAddress, subject: emailSubject, messageContent: emailContent, date, time }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        const body = await result.json()\r\n    }\r\n\r\n    return (\r\n        <div id=\"send-email-form\">\r\n            <h1>Compose New Email</h1>\r\n            <label>\r\n                Send To:\r\n            <input type=\"text\" value={receiverEmailAddress} onChange={(event) => setReceiverEmailAddress(event.target.value)} />\r\n            </label>\r\n            <label>\r\n                Subject:\r\n            <input type=\"text\" value={emailSubject} onChange={(event) => setEmailSubject(event.target.value)} />\r\n            </label>\r\n            <label>\r\n                Email Content:\r\n            <textarea rows=\"12\" cols=\"80\" value={emailContent} onChange={(event) => setEmailContent(event.target.value)} />\r\n            </label>\r\n            <button onClick={() => addComment()}>Send Email</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComposeEmailForm","C:\\Users\\guygo\\Desktop\\Herolo\\email-app\\src\\screens\\SentEmailPage.js",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":42,"column":8,"nodeType":"71","endLine":42,"endColumn":22,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":46,"column":19,"nodeType":"75","messageId":"76","endLine":46,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":21},{"ruleId":"73","severity":1,"message":"78","line":22,"column":15,"nodeType":"75","messageId":"76","endLine":22,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":41,"column":8,"nodeType":"71","endLine":41,"endColumn":22,"suggestions":"79"},{"ruleId":"73","severity":1,"message":"74","line":45,"column":19,"nodeType":"75","messageId":"76","endLine":45,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'senderEmailId'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'SentEmailPage' is defined but never used.","'body' is assigned a value but never used.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"84","fix":"86"},"Update the dependencies array to be: [emailAccount, senderEmailId]",{"range":"87","text":"88"},{"range":"89","text":"88"},[1555,1569],"[emailAccount, senderEmailId]",[1565,1579]]